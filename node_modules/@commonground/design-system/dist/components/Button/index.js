"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _polished = require("polished");

var _propTypes = require("prop-types");

var _primary = _interopRequireDefault(require("./primary.style"));

var _secondary = _interopRequireDefault(require("./secondary.style"));

var _danger = _interopRequireDefault(require("./danger.style"));

// Copyright Â© VNG Realisatie 2020
// Licensed under the EUPL
//
var INNER_BORDER_WIDTH = '2px';

var StyledButton = /*#__PURE__*/_styledComponents["default"].button.withConfig({
  displayName: "Button__StyledButton",
  componentId: "g50bbf-0"
})(["display:inline-flex;align-items:center;padding:calc(", " - ", ");border:", " solid transparent;line-height:", ";font-size:", ";font-weight:", ";text-decoration:none;cursor:pointer;position:relative;", " &:after{background-color:", ";content:'';position:absolute;height:3px;bottom:-", ";left:-", ";right:-", ";}&:focus{border:", " solid ", ";outline:", " solid ", ";&:after{display:none;}}"], function (p) {
  return p.theme.tokens.spacing05;
}, INNER_BORDER_WIDTH, INNER_BORDER_WIDTH, function (p) {
  return p.theme.tokens.fontSizeMedium;
}, function (p) {
  return p.theme.tokens.fontSizeMedium;
}, function (p) {
  return p.theme.tokens.fontWeightSemiBold;
}, function (p) {
  switch (p.variant) {
    case 'danger':
      return (0, _danger["default"])(p);

    case 'secondary':
      return (0, _secondary["default"])(p);

    case 'primary':
    default:
      return (0, _primary["default"])(p);
  }
}, function (p) {
  return (0, _polished.rgba)(p.theme.tokens.colorPaletteGray900, 0.25);
}, INNER_BORDER_WIDTH, INNER_BORDER_WIDTH, INNER_BORDER_WIDTH, INNER_BORDER_WIDTH, function (p) {
  return p.theme.tokens.colorBackground;
}, INNER_BORDER_WIDTH, function (p) {
  return p.theme.tokens.colorFocus;
});
/**
 * Use `Button` for both buttons and anchor elements.
 */


var Button = function Button(props) {
  return /*#__PURE__*/_react["default"].createElement(StyledButton, props);
};

Button.propTypes = {
  variant: (0, _propTypes.oneOf)(['primary', 'secondary', 'danger']),
  disabled: _propTypes.bool
};
Button.defaultProps = {
  variant: 'primary',
  disabled: false
};
var _default = Button;
exports["default"] = _default;