"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = require("prop-types");

var _index = require("./index.styles");

// Copyright Â© VNG Realisatie 2020
// Licensed under the EUPL
//

/**
 * Use `Alert` to provide local feedback, relative to another element.
 *
 * For global feedback, you may want to use a `Toaster`.
 */
var Alert = function Alert(_ref) {
  var title = _ref.title,
      children = _ref.children,
      props = (0, _objectWithoutProperties2["default"])(_ref, ["title", "children"]);
  return /*#__PURE__*/_react["default"].createElement(_index.Container, (0, _extends2["default"])({
    role: "alert"
  }, props), title && title.length > 1 ? /*#__PURE__*/_react["default"].createElement(_index.Title, {
    "data-testid": "title"
  }, title) : null, /*#__PURE__*/_react["default"].createElement(_index.Content, {
    "data-testid": "content"
  }, children));
};

Alert.propTypes = {
  children: _propTypes.node,
  title: _propTypes.string,
  variant: (0, _propTypes.oneOf)(['info', 'warning', 'success', 'error'])
};
Alert.defaultProps = {
  variant: 'info'
};
var _default = Alert;
exports["default"] = _default;