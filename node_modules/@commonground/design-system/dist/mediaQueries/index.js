"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.only = exports.down = exports.up = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _styledComponents = require("styled-components");

var _breakpoints = _interopRequireDefault(require("../themes/parts/breakpoints.js"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var keys = Object.keys(_breakpoints["default"]);
var step = 5; // up(), down() and only() inspired by material-ui
// https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/styles/createBreakpoints.js

/**
 * Sizes of given key and up, eg;
 * media.mdUp = (min-width: <md pixels>)
 *
 * @param {string} key
 */

var up = function up(key) {
  return "@media (min-width: ".concat(_breakpoints["default"][key], "px)");
};
/**
 * One unit less than next key
 * media.mdDown = (max-width: <lg pixels - 1>)
 *
 * @param {string} key
 */


exports.up = up;

var down = function down(key) {
  var nextKey = keys[keys.indexOf(key) + 1]; // down('xl') equals up('xs')

  if (!nextKey) return up(keys[0]);
  return "@media (max-width: ".concat(_breakpoints["default"][nextKey] - step / 100, "px)");
};
/**
 * Size range of given key until one unit less than next key
 * media.md = (min-width: <md pixels>) and (max-width: <lg pixels - 1>)
 *
 * @param {string} key
 */


exports.down = down;

var only = function only(key) {
  var nextKey = keys[keys.indexOf(key) + 1]; // only('xl') equals up('xl')

  if (!nextKey) return up(key);
  return "@media (min-width: ".concat(_breakpoints["default"][key], "px) and ") + "(max-width: ".concat(_breakpoints["default"][nextKey] - step / 100, "px)");
};
/**
 * Creates a styled-components `css` block for passed arguments and query
 *
 * @param {*} args actual css
 * @param {*} query generated media query by one of the above functions
 */


exports.only = only;

var queryFactory = function queryFactory(args, query) {
  return (0, _styledComponents.css)(["", "{", "}"], query, _styledComponents.css.apply(void 0, (0, _toConsumableArray2["default"])(args)));
};

var mediaQueries = Object.keys(_breakpoints["default"]).reduce(function (accumulator, label) {
  var _objectSpread2;

  return _objectSpread(_objectSpread({}, accumulator), {}, (_objectSpread2 = {}, (0, _defineProperty2["default"])(_objectSpread2, "".concat(label, "Down"), function Down() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return queryFactory(args, down(label));
  }), (0, _defineProperty2["default"])(_objectSpread2, "".concat(label), function _() {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return queryFactory(args, only(label));
  }), (0, _defineProperty2["default"])(_objectSpread2, "".concat(label, "Up"), function Up() {
    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }

    return queryFactory(args, up(label));
  }), _objectSpread2));
}, {});
/**
 * Use like this:
 *
 * import styled from 'styled-components/macro'
 * import { mediaQueries } from 'theme/mediaQueries'
 * const MediaTest = styled.div`
 *     // default style
 *     background-color: hotpink;
 *
 *     ${mediaQueries.md`
 *         background-color: lime;
 *     `}
 *
 *     ${mediaQueries.lgUp`
 *         background-color: cyan;
 *     `}
 * `
 */

var _default = mediaQueries;
exports["default"] = _default;